#this file is automatically generated 


# SET(TARGET_LIBRARIES  ${OPENSCENEGRAPH_LIBRARIES})

SET(EXTLIBS "extlibs")
SET(INTERLIBS "Inter")

 if(WIN32)
    if(${CMKAE_BUILD_TYPE} MATCHES  "Debug")
        SET(TARGET_LIBRARIES
            osgd.lib
            osgFXd.lib
            osgGAd.lib
            osgViewerd.lib
            osgUtild.lib
            osgTextd.lib
            osgDBd.lib
            osgUId.lib
            osgWidgetd.lib
            OpenThreadsd.lib
        )
     else()
        SET(TARGET_LIBRARIES
            osg.lib
            osgFX.lib
            osgGA.lib
            osgViewer.lib
            osgUtil.lib
            osgText.lib
            osgDB.lib
            osgUI.lib
            osgWidget.lib
            OpenThreads.lib
        )
     endif()
 else()
    SET(TARGET_LIBRARIES
        libosg.so
        libosgFX.so
        libosgGA.so
        libosgViewer.so
        libosgUtil.so
        libosgText.so
        libosgDB.so
        libosgUI.so
        libosgWidget.so
        libOpenThreads.so
    )
endif()
add_library(${EXTLIBS} STATIC SceneCameraManipulator.cpp)
SET_TARGET_PROPERTIES(${EXTLIBS} PROPERTIES FOLDER "Core")
LIST(APPEND  TARGET_LIBRARIES     ${EXTLIBS})

IF ( NOT Qt5Widgets_FOUND )
    INCLUDE_DIRECTORIES( ${QT_INCLUDE_DIR} ${QT_QTCORE_INCLUDE_DIR} ${QT_QTGUI_INCLUDE_DIR} ${QT_QTOPENGL_INCLUDE_DIR} )
    SET(TARGET_EXTERNAL_LIBRARIES ${QT_QTCORE_LIBRARY_RELEASE} ${QT_QTGUI_LIBRARY_RELEASE} ${QT_QTOPENGL_LIBRARY_RELEASE} )
ENDIF()

function(build_target)
    message("Name " ${ARGV0})
    message("File " ${ARGV1})

    #### end var setup  ###
    IF ( Qt5Widgets_FOUND )
        SET ( EXAMPLE_NAME1 ${ARGV0} )
    ELSE()
        SET ( EXAMPLE_NAME1 ${ARGV0} )
    ENDIF()
    # SETUP_EXAMPLE(${EXAMPLE_NAME})
    message("Depend on " ${TARGET_LIBRARIES})
    
    add_executable(example_${EXAMPLE_NAME1} ${ARGV1} )
    
    target_link_libraries(example_${EXAMPLE_NAME1} osgQOpenGL)
    
    target_link_libraries(example_${EXAMPLE_NAME1} ${TARGET_LIBRARIES})
    
    SET_TARGET_PROPERTIES(example_${EXAMPLE_NAME1} PROPERTIES FOLDER "EXAMPLES")

    #Set_Target_Properties(example_${EXAMPLE_NAME1} PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
    Set_Target_Properties(example_${EXAMPLE_NAME1} PROPERTIES LINK_FLAGS_DEBUG "/SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
    IF ( Qt5Widgets_FOUND )
        qt5_use_modules( example_${EXAMPLE_NAME1} Widgets OpenGL )
    ENDIF( Qt5Widgets_FOUND )

endfunction()

### test for how to use osg draw a rectangle whith color and texture 
### and how to use shader program
build_target(osgClrUv testColorUvShader.cpp)

### exp for how to use osg light
build_target(osgLight testLight.cpp)

### exp for how to use osg move
build_target(osgMove testMove.cpp)

### exp for how to build skybox
build_target(osgSky testSkyBox.cpp)

### exp for how to build model
build_target(osgModel testModel.cpp)

### exp for how to build projection obj
build_target(osgProj testProjection.cpp)

### exp for how to use osg widget
build_target(osgUI testWidget.cpp)

### exp for how to use camera
build_target(osgCamera testCamera.cpp)

###exp for qt viewer
build_target(osgQtViewer testQtViewer.cpp)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../GeoMap/include)
###exp for gpstrace play
build_target(osgTraceDisplay testTraceDisplay.cpp)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/intersectors)
set(IntSource  
     intersectors/SVMData.h
     intersectors/SVMData.cpp
     intersectors/DraggableWire.h
     intersectors/DraggableWire.cpp
     intersectors/EventHandler.h
     intersectors/EventHandler.cpp
     intersectors/LineIntersector.h
     intersectors/LineIntersector.cpp
     intersectors/PointIntersector.h
     intersectors/PointIntersector.cpp
     intersectors/VirtualPlaneIntersector.h
     intersectors/VirtualPlaneIntersector.cpp)

add_library(${INTERLIBS} STATIC ${IntSource})
###exp for intersect
build_target(osgIntersect testIntersect.cpp)
target_link_libraries(example_osgIntersect ${INTERLIBS})
